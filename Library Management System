import java.sql.*;
import java.util.Scanner;

public class LibraryManagementSystemDB {
    private static final String JDBC_URL = "jdbc:mysql://localhost:3306/library_db";
    private static final String DB_USER = "root";
    private static final String DB_PASSWORD = "himanshi2123";  

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int choice;

        try (Connection conn = DriverManager.getConnection(JDBC_URL, DB_USER, DB_PASSWORD)) {
            System.out.println("Connected to Database.");

            do {
                System.out.println("\n--- Library Management System ---");
                System.out.println("1. Add Book");
                System.out.println("2. View All Books");
                System.out.println("3. Issue Book");
                System.out.println("4. Return Book");
                System.out.println("5. Exit");
                System.out.print("Enter your choice: ");
                choice = scanner.nextInt();
                scanner.nextLine(); // Consume newline

                switch (choice) {
                    case 1:
                        addBook(conn, scanner);
                        break;
                    case 2:
                        viewBooks(conn);
                        break;
                    case 3:
                        issueBook(conn, scanner);
                        break;
                    case 4:
                        returnBook(conn, scanner);
                        break;
                    case 5:
                        System.out.println("Exiting system. Goodbye!");
                        break;
                    default:
                        System.out.println("Invalid choice. Try again.");
                }
            } while (choice != 5);

        } catch (SQLException e) {
            e.printStackTrace();
        }

        scanner.close();
    }

    private static void addBook(Connection conn, Scanner scanner) throws SQLException {
        System.out.print("Enter book title: ");
        String title = scanner.nextLine();
        System.out.print("Enter book author: ");
        String author = scanner.nextLine();

        String sql = "INSERT INTO books (title, author, isIssued) VALUES (?, ?, false)";
        try (PreparedStatement pstmt = conn.prepareStatement(sql)) {
            pstmt.setString(1, title);
            pstmt.setString(2, author);
            int rows = pstmt.executeUpdate();
            System.out.println(rows > 0 ? "Book added successfully." : "Failed to add book.");
        }
    }

    private static void viewBooks(Connection conn) throws SQLException {
        String sql = "SELECT * FROM books";
        try (Statement stmt = conn.createStatement();
             ResultSet rs = stmt.executeQuery(sql)) {

            System.out.println("\nAvailable Books:");
            while (rs.next()) {
                System.out.printf("ID: %d, Title: %s, Author: %s, Issued: %s%n",
                        rs.getInt("id"),
                        rs.getString("title"),
                        rs.getString("author"),
                        rs.getBoolean("isIssued") ? "Yes" : "No");
            }
        }
    }

    private static void issueBook(Connection conn, Scanner scanner) throws SQLException {
        System.out.print("Enter book ID to issue: ");
        int id = scanner.nextInt();

        String checkSql = "SELECT isIssued FROM books WHERE id = ?";
        try (PreparedStatement checkStmt = conn.prepareStatement(checkSql)) {
            checkStmt.setInt(1, id);
            ResultSet rs = checkStmt.executeQuery();

            if (rs.next()) {
                if (rs.getBoolean("isIssued")) {
                    System.out.println("Book is already issued.");
                } else {
                    String issueSql = "UPDATE books SET isIssued = true WHERE id = ?";
                    try (PreparedStatement issueStmt = conn.prepareStatement(issueSql)) {
                        issueStmt.setInt(1, id);
                        int rows = issueStmt.executeUpdate();
                        System.out.println(rows > 0 ? "Book issued successfully." : "Error issuing book.");
                    }
                }
            } else {
                System.out.println("Book not found.");
            }
        }
    }

    private static void returnBook(Connection conn, Scanner scanner) throws SQLException {
        System.out.print("Enter book ID to return: ");
        int id = scanner.nextInt();

        String checkSql = "SELECT isIssued FROM books WHERE id = ?";
        try (PreparedStatement checkStmt = conn.prepareStatement(checkSql)) {
            checkStmt.setInt(1, id);
            ResultSet rs = checkStmt.executeQuery();

            if (rs.next()) {
                if (!rs.getBoolean("isIssued")) {
                    System.out.println("Book was not issued.");
                } else {
                    String returnSql = "UPDATE books SET isIssued = false WHERE id = ?";
                    try (PreparedStatement returnStmt = conn.prepareStatement(returnSql)) {
                        returnStmt.setInt(1, id);
                        int rows = returnStmt.executeUpdate();
                        System.out.println(rows > 0 ? "Book returned successfully." : "Error returning book.");
                    }
                }
            } else {
                System.out.println("Book not found.");
            }
        }
    }
}

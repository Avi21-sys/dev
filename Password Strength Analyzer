import re

def analyze_password(password):
    """Analyzes the strength of the provided password."""
    
    # Define criteria
    min_length = 8
    has_uppercase = re.search(r'[A-Z]', password)
    has_lowercase = re.search(r'[a-z]', password)
    has_digit = re.search(r'\d', password)
    has_special = re.search(r'[!@#$%^&*(),.?":{}|<>]', password)

    # Initialize score
    score = 0

    # Check length
    if len(password) >= min_length:
        score += 1

    # Check character types
    if has_uppercase:
        score += 1
    if has_lowercase:
        score += 1
    if has_digit:
        score += 1
    if has_special:
        score += 1

    # Determine strength
    if score == 5:
        strength = "Very Strong"
    elif score == 4:
        strength = "Strong"
    elif score == 3:
        strength = "Moderate"
    elif score == 2:
        strength = "Weak"
    else:
        strength = "Very Weak"

    # Return results
    return {
        'password': password,
        'length_ok': len(password) >= min_length,
        'has_uppercase': bool(has_uppercase),
        'has_lowercase': bool(has_lowercase),
        'has_digit': bool(has_digit),
        'has_special': bool(has_special),
        'strength': strength
    }

def main():
    password = input("Enter a password to analyze: ")
    result = analyze_password(password)
    
    print("\nPassword Analysis:")
    print(f"Password: {result['password']}")
    print(f"Length OK: {'Yes' if result['length_ok'] else 'No'}")
    print(f"Contains Uppercase: {'Yes' if result['has_uppercase'] else 'No'}")
    print(f"Contains Lowercase: {'Yes' if result['has_lowercase'] else 'No'}")
    print(f"Contains Digit: {'Yes' if result['has_digit'] else 'No'}")
    print(f"Contains Special Character: {'Yes' if result['has_special'] else 'No'}")
    print(f"Strength: {result['strength']}")

if __name__ == "__main__":
    main()
